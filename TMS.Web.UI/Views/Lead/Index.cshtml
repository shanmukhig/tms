@using System.Reflection
@using TMS.Entities
@using TMS.Web.UI.Controllers
@model Lead

@{
  ViewBag.Title = "Leads";
  Layout = "../Shared/_Layout.cshtml";
}

<div class="row" style="padding-top: 15px;">
  <div class="panel panel-default">
    <div class="panel-heading">
      <div class="input-group">
        <select class="selectpicker show-menu-arrow" data-size="8" data-selected-text-format="count>0" title="" multiple>
          @{
            List<string> propsToIgnore = new List<string> { "Id", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" };
          }
          @foreach (PropertyInfo propertyInfo in typeof(Lead).GetProperties(BindingFlags.Instance | BindingFlags.Public).OrderBy(x => x.Name).Where(x => !@propsToIgnore.Contains(x.Name)))
          {
            <option>@propertyInfo.Name</option>
          }
        </select>
        <input style="height: 47px;" type="text" class="form-control" placeholder="Search Leads..." id="txtSearch">
        <span class="btn btn-outline btn-primary input-group-addon" id="leadSearch" data-url="@Url.Action("Search", "Lead", new { searchString = "{searchString}", searchFields = "{searchFields}" })">
          <i class="glyphicon glyphicon-search"></i>
        </span>
        <span class="btn btn-outline btn-primary input-group-addon" onclick="location.href='@Url.Action("Create", "Lead")'"><i class="glyphicon glyphicon-user"></i></span>
        <span class="btn btn-outline btn-danger input-group-addon"><i class="glyphicon glyphicon-trash"></i></span>
        <span class="btn btn-outline btn-info input-group-addon"><i class="glyphicon glyphicon-print"></i></span>
      </div>
    </div>
    <!-- /.panel-heading -->
    <div class="panel-body">
      <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover display" id="dataTables-example">
          <thead>
            <tr>
              <th>Title</th>
              <th>Lead Type</th>
              <th>Lead Source</th>
              <th>City</th>
              <th>Country</th>
              <th>Client Status</th>
            </tr>
          </thead>
          <tbody>
            @{
              List<Country> countries = ViewBag.Countries;
              foreach (Lead lead in ViewBag.Leads)
              {
                <tr onclick="location.href='@Url.Action("Details", "Lead" , new { id=lead.Id })'" style="cursor: pointer;">
                  <td>@lead.Salutation. @lead.LastName, @lead.FirstName</td>
                  <td>
                    @if (@lead.LeadType.HasValue)
                    {
                      @Html.PascalCaseToPrettyString(@lead.LeadType)
                    }
                  </td>
                  <td>
                    @if (@lead.LeadSource.HasValue)
                    {
                      @Html.PascalCaseToPrettyString(@lead.LeadSource)
                    }
                  </td>
                  <td>@lead.City</td>
                  <td>
                    @{
                      @countries.Single(x => x.Code == lead.Country).Name.TitleCase()
                    }
                  </td>
                  <td>
                    @if (lead.ClientStatus.HasValue)
                    {
                      @Html.PascalCaseToPrettyString(lead.ClientStatus);
                    }
                  </td>
                </tr>
              }
            }
          </tbody>
        </table>
      </div>
    </div>
    <!-- /.panel-body -->
  </div>
  <!-- /.panel -->
  <!-- /.col-lg-12 -->
</div>
<script language="javascript" type="text/javascript">
  $(document).ready(function () {
    $('#dataTables-example').dataTable();

    $('.selectpicker').selectpicker({
      'countSelectedText': '',
    });
  });

  $('#leadSearch').click(function () {
    window.location = $(this).attr('data-url').replace('%7BsearchFields%7D', $('.selectpicker').val()).replace('%7BsearchString%7D', $('#txtSearch').val());;
  });

</script>